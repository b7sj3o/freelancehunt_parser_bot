"""user field

Revision ID: 32742f5d7403
Revises: 23b62ad484d1
Create Date: 2025-06-10 00:58:53.824553

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '32742f5d7403'
down_revision: Union[str, None] = '23b62ad484d1'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(table_name='users',
                     column_name='chat_id',
                     new_column_name='user_id')
    op.alter_column(table_name='users',
                     column_name='excluded_words',
                     new_column_name='excluded_tags')
    op.add_column('users', sa.Column('username', sa.String(), nullable=True))
    op.add_column('users', sa.Column('first_name', sa.String(), nullable=True))
    op.add_column('users', sa.Column('last_name', sa.String(), nullable=True))
    op.create_unique_constraint(None, 'users', ['username'])
    op.create_unique_constraint(None, 'users', ['user_id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('users', sa.Column('chat_id', sa.BIGINT(), autoincrement=False, nullable=False))
    op.add_column('users', sa.Column('excluded_words', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'users', type_='unique')
    op.drop_constraint(None, 'users', type_='unique')
    op.create_unique_constraint(op.f('users_chat_id_key'), 'users', ['chat_id'], postgresql_nulls_not_distinct=False)
    op.drop_column('users', 'excluded_tags')
    op.drop_column('users', 'last_name')
    op.drop_column('users', 'first_name')
    op.drop_column('users', 'username')
    op.drop_column('users', 'user_id')
    # ### end Alembic commands ###
